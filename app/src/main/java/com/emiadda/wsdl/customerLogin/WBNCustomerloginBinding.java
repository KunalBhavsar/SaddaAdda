package com.emiadda.wsdl.customerLogin;




//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.5.7.1
//
// Created by Quasar Development at 04/07/2016
//
//---------------------------------------------------




import android.util.Log;

import com.emiadda.server.ServerResponse;

import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.*;
import org.ksoap2.transport.*;
import org.xmlpull.v1.XmlPullParserException;

import java.io.IOException;
import java.net.SocketTimeoutException;
import java.util.List;


public class WBNCustomerloginBinding
{
    private static final String TAG = WBNCustomerloginBinding.class.getSimpleName();

    interface WBNIWcfMethod
    {
        WBNExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws java.lang.Exception;

        java.lang.Object ProcessResult(WBNExtendedSoapSerializationEnvelope __envelope,java.lang.Object result) throws java.lang.Exception;
    }

    String url="http://www.mydevsystems.com/dev/emiaddanew/jnusoap/emiadda/customerLogin.php";

    int timeOut=10000;
    public List< HeaderProperty> httpHeaders;
    public boolean enableLogging;

    WBNIServiceEvents callback;
    public WBNCustomerloginBinding(){}

    public WBNCustomerloginBinding (WBNIServiceEvents callback)
    {
        this.callback = callback;
    }
    public WBNCustomerloginBinding(WBNIServiceEvents callback,String url)
    {
        this.callback = callback;
        this.url = url;
    }

    public WBNCustomerloginBinding(WBNIServiceEvents callback,String url,int timeOut)
    {
        this.callback = callback;
        this.url = url;
        this.timeOut=timeOut;
    }

    protected org.ksoap2.transport.Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                int port=uri.getPort()>0?uri.getPort():443;
                return new HttpsTransportSE(uri.getHost(), port, uri.getPath(), timeOut);
            }
            else
            {
                return new HttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }
    
    protected WBNExtendedSoapSerializationEnvelope createEnvelope()
    {
        WBNExtendedSoapSerializationEnvelope envelope= new WBNExtendedSoapSerializationEnvelope(WBNExtendedSoapSerializationEnvelope.VER11);
        return envelope;
    }
    
    protected java.util.List sendRequest(String methodName,WBNExtendedSoapSerializationEnvelope envelope,org.ksoap2.transport.Transport transport  )throws IOException, XmlPullParserException
    {
        return transport.call(methodName, envelope, httpHeaders);
    }

    java.lang.Object getResult(java.lang.Class destObj,java.lang.Object source,String resultName,WBNExtendedSoapSerializationEnvelope __envelope) throws java.lang.Exception
    {
        if(source==null)
        {
            return null;
        }
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                java.lang.Object instance=__envelope.get(source,destObj);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                java.lang.Object j=soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                java.lang.Object instance=__envelope.get(j,destObj);
                return instance;
            }
            else if( soap.getName().equals(resultName)) {
                java.lang.Object instance=__envelope.get(source,destObj);
                return instance;
            }
       }

       return null;
    }

        
    public ServerResponse CustomerLogin(final WBNparams _params )
    {
        try {
            return (ServerResponse) execute(new WBNIWcfMethod() {
                @Override
                public WBNExtendedSoapSerializationEnvelope CreateSoapEnvelope() {
                    WBNExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                    __envelope.addMapping("", "params", new WBNparams().getClass());
                    SoapObject __soapReq = new SoapObject("http://www.mydevsystems.com", "CustomerLogin");
                    __envelope.setOutputSoapObject(__soapReq);

                    PropertyInfo __info = null;
                    __info = new PropertyInfo();
                    __info.namespace = "";
                    __info.name = "params";
                    __info.type = WBNparams.class;
                    __info.setValue(_params != null ? _params : SoapPrimitive.NullNilElement);
                    __soapReq.addProperty(__info);
                    return __envelope;
                }

                @Override
                public ServerResponse ProcessResult(WBNExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws Exception {
                    ServerResponse serverResponse = new ServerResponse();
                    SoapObject __soap = (SoapObject) __result;
                    java.lang.Object obj = __soap.getProperty("result");
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                        SoapPrimitive j = (SoapPrimitive) obj;
                        serverResponse.setResponseStatus(ServerResponse.SERVER_OK);
                        serverResponse.setResponse(j.toString());
                        return serverResponse;
                    } else if (obj != null && obj instanceof String) {
                        serverResponse.setResponseStatus(ServerResponse.SERVER_OK);
                        serverResponse.setResponse((String) obj);
                        return serverResponse;
                    }
                    return null;
                }
            }, "http://www.mydevsystems.com#CustomerLogin");
        }
        catch (Exception e) {
            ServerResponse serverResponse = new ServerResponse();
            serverResponse.setError(e.getMessage());
            serverResponse.setResponseStatus(ServerResponse.SERVER_ERROR);
            return serverResponse;
        }
    }
    
    protected java.lang.Object execute(WBNIWcfMethod wcfMethod,String methodName) throws SocketTimeoutException, java.lang.Exception
    {
        org.ksoap2.transport.Transport __httpTransport=createTransport();
        __httpTransport.debug=enableLogging;
        WBNExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport);
            
        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    android.util.Log.i("requestDump",__httpTransport.requestDump);    
                    
                }
                if (__httpTransport.responseDump != null) {
                    android.util.Log.i("responseDump",__httpTransport.responseDump);
                }
            }
        }
        java.lang.Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }
    
    protected < T> android.os.AsyncTask< Void, Void, WBNOperationResult< T>>  executeAsync(final WBNFunctions.IFunc< T> func)
    {
        return new android.os.AsyncTask< Void, Void, WBNOperationResult< T>>()
        {
            @Override
            protected void onPreExecute() {
                callback.Starting();
            };
            @Override
            protected WBNOperationResult< T> doInBackground(Void... params) {
                WBNOperationResult< T> result = new WBNOperationResult< T>();
                try
                {
                    result.Result= func.Func();
                }
                catch(java.lang.Exception ex)
                {
                    ex.printStackTrace();
                    result.Exception=ex;
                }
                return result;
            }
            
            @Override
            protected void onPostExecute(WBNOperationResult< T> result)
            {
                callback.Completed(result);
            }
        }.execute();
    }
        
    java.lang.Exception convertToException(org.ksoap2.SoapFault fault,WBNExtendedSoapSerializationEnvelope envelope)
    {

        return new java.lang.Exception(fault.faultstring);
    }
}


