package com.emiadda.server;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/3/2016 5:50:27 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class TotalParams implements KvmSerializable {
    
    public String code;
    public String title;
    public String value;
    public String sort_order;
    
    public TotalParams(){}
    
    public TotalParams(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("code"))
        {
            Object obj = soapObject.getProperty("code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                code = j.toString();
            }else if (obj!= null && obj instanceof String){
                code = (String) obj;
            }
        }
        if (soapObject.hasProperty("title"))
        {
            Object obj = soapObject.getProperty("title");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                title = j.toString();
            }else if (obj!= null && obj instanceof String){
                title = (String) obj;
            }
        }
        if (soapObject.hasProperty("value"))
        {
            Object obj = soapObject.getProperty("value");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                value = j.toString();
            }else if (obj!= null && obj instanceof String){
                value = (String) obj;
            }
        }
        if (soapObject.hasProperty("sort_order"))
        {
            Object obj = soapObject.getProperty("sort_order");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sort_order = j.toString();
            }else if (obj!= null && obj instanceof String){
                sort_order = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return code;
            case 1:
                return title;
            case 2:
                return value;
            case 3:
                return sort_order;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 4;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "code";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "title";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "value";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "sort_order";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
